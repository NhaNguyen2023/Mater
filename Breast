---
title: "breastPatientsDetail"
output: html_document
date: "2024-02-07"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Data Source: Mater Dive Port 7
# Load the file
```{r load working space}
## Load environment
rm(list = ls())
print(getwd())
setwd("C:/Users/User/Documents/RStudio/BreastDivePort_PatientsDetail")
print(getwd())

# library(dataQualityR) #package is not available for this version of R
library(stringr)
library(readr)
library(tidyverse) #table (frequency and proportion), install.packages("tidyverse")
library(dplyr) # install.packages("dplyr")
library(ggplot2)
library(qcc) #install
library(sqldf)
library(Rcmdr)  #continuous var, numSummary function, install.packages("Rcmdr")
library(moments)  #skewness,kurtosis
library(plyr)   #categorical var, install.packages("plyr")
library(gridExtra)  #graph

# library(Hmisc)  #Imputate missing values
# #library(DMwR) #Compute the accuracy of imputation, but need to install the other packages
library(psych) #install, describeBy
library(dunn.test) #install, non-parametric post-hoc test after Kruskal-Wallis
library(stats)  #multiple regression lm() function, lapply function
# library(PerformanceAnalytics) #chart.Correlation (Scatterplot)
library(car)  #leveneTest, Scatterplot matrix
library(caret) #classification & regression training
# library(C50)
library(AppliedPredictiveModeling) #Scatterplot, install.packages('AppliedPredictiveModeling')
# library(rpart)
# library(rpart.plot)
# library(pROC)  #cross validation
library(gmodels)  #Evaluate the model, chi square correlation, install.packages("gmodels")
library(rattle)
library(RColorBrewer)

## Load file
main <- read.csv("BreastPatientsDetail_Clinic.csv")
#sample <- main %>% group_by(main$Record.Type)
#samplePatients <- sample_frac(main,0.1,replace = F)

## Input variables
head(main)
View(main)
str(main)
summary(main)
allMissing = is.na(main)
counts = colSums(allMissing)
counts [counts>0]
#main_transform <- transform(main, score = as.numeric(score), sum_click = as.numeric(sum_click))
print(is.data.frame(main))


### Date calculation from Booking to Attendance
main$Attendance.Date <- as.Date(main$Attendance.Date, format="%d/%m/%y")
main$Appointment.Date <- as.Date(main$Appointment.Date...Time, format="%d/%m/%y")
main$daysDiff <- difftime(main$Attendance.Date,main$Appointment.Date,units="days")

main$attendanceMonth <- substring(main$Attendance.MonthYear,0,2)

main$addressDiff
if (main$Present.Address == main$Home.Address) {
main$addressDiff = 0
} else
main$addressDiff = 1
 

write.csv(main[,c("Record.Type","Clinic.Code","Clinic.Type","NurseFlag","Medical.Record.Number","Gender","Attendance.Day","Attendance.MonthYear","Attendance.Date","Attendance.Type.Description","Attendance.Year","Attendance.Month","Referral.Source","Consultant","Insurance.Scheme","Eligibility","Age.at.Attendance","Age.at.Attendance.Cat.HSE","Pathway.Number","Present.Address","Home.Address","Appointment.Date","Area.of.Residence","Referring.Hospital","Booking.Type","New.Attendances","Year","daysDiff","attendanceMonth")],"breast.csv")

main_processed <- read.csv("breastDetails.csv")

```


```{r inspection}
# Inspecting data
str(main_processed)
summary(main_processed)
head(main_processed)
any(is.na(main_processed))
colSums(is.na(main_processed))
```


```{r transformation}
# Transforming data

## Outcome description
cbind(sort(table(main_processed$Record.Type=="Attendance"),decreasing=TRUE),sort(100*round(prop.table(table(main_processed$Record.Type=="Attendance")),5),deparse.level=2,decreasing=TRUE))
cbind(sort(table(main_processed$Record.Type=="Cancellation"),decreasing=TRUE),sort(100*round(prop.table(table(main_processed$Record.Type=="Cancellation")),5),deparse.level=2,decreasing=TRUE))
cbind(sort(table(main_processed$Record.Type=="DNA"),decreasing=TRUE),sort(100*round(prop.table(table(main_processed$Record.Type=="DNA")),5),deparse.level=2,decreasing=TRUE))
cbind(sort(table(main_processed$Record.Type=="Future Booking"),decreasing=TRUE),sort(100*round(prop.table(table(main_processed$Record.Type=="Future Booking")),5),deparse.level=2,decreasing=TRUE))

## Predictor description (categorical)

### Data frame for nominal/ binary values of variables
options(digits=2)
cbind(sort(table(breast_attendance$Clinic.Type),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Clinic.Type)),5),deparse.level=2,decreasing=TRUE))
cbind(sort(table(breast2019$Clinic.Type),decreasing=TRUE),sort(100*round(prop.table(table(breast2019$Clinic.Type)),5),deparse.level=2,decreasing=TRUE))
cbind(sort(table(breast2020$Clinic.Type),decreasing=TRUE),sort(100*round(prop.table(table(breast2020$Clinic.Type)),5),deparse.level=2,decreasing=TRUE))
cbind(sort(table(breast2021$Clinic.Type),decreasing=TRUE),sort(100*round(prop.table(table(breast2021$Clinic.Type)),5),deparse.level=2,decreasing=TRUE))
cbind(sort(table(breast2022$Clinic.Type),decreasing=TRUE),sort(100*round(prop.table(table(breast2022$Clinic.Type)),5),deparse.level=2,decreasing=TRUE))
cbind(sort(table(breast2023$Clinic.Type),decreasing=TRUE),sort(100*round(prop.table(table(breast2023$Clinic.Type)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Clinic.Code),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Clinic.Code)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Referral.Source),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Referral.Source)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Referring.Hospital),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Referring.Hospital)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Consultant),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Consultant)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Eligibility),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Eligibility)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Booking.Type),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Booking.Type)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Attendance.Type.Description),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Attendance.Type.Description)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Attendance.Day),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Attendance.Day)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Attendance.MonthYear),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Attendance.MonthYear)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$attendanceMonth),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$attendanceMonth)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Year),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Year)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Gender),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Gender)),5),deparse.level=2,decreasing=TRUE))

cbind(sort(table(breast_attendance$Area.of.Residence),decreasing=TRUE),sort(100*round(prop.table(table(breast_attendance$Area.of.Residence)),5),deparse.level=2,decreasing=TRUE))

# breast_attendance_tab <- cbind(table(breast_attendance$cat_status_5y,breastCancer$cat_status_studyCutoff),prop.table(table(breastCancer$cat_status_5y,breastCancer$cat_status_studyCutoff)),breastCancer[order(breastCancer$cat_status_studyCutoff),])
# addmargins(breastCancer_tab)
# prop.table(breastCancer_tab)

## Predictor description (numeric)
summary(breast_attendance$Age.at.Attendance)
summary(breast_attendance$daysDiff)

```


# ```{r normality, echo=FALSE}
# # Creating graphs
# 
# count_clinic.type <- sort(table(breast_attendance$Clinic.Type,breast_attendance$Year),decreasing=TRUE)
# 
# bp_clinicType <- barplot(count_clinic.type, main="Clinic type by year",
#                          xlab="Number of Attendance", col=c("blue","green"),
#                          legend = rownames(count_clinic.type),beside = TRUE)
# count_clinic.type2019 <- table(breast2019$Clinic.Type)
# bp2019_clinicType <- barplot(count_clinic.type2019)
# count_clinic.type2020 <- table(breast2020$Clinic.Type)
# barplot(count_clinic.type2020)
# count_clinic.type2021 <- table(breast2021$Clinic.Type)
# barplot(count_clinic.type2021)
# count_clinic.type2022 <- table(breast2022$Clinic.Type)
# barplot(count_clinic.type2022)
# count_clinic.type2023 <- table(breast2023$Clinic.Type)
# barplot(count_clinic.type2023)
# grid.arrange(count_clinic.type,count_clinic.type2023,count_clinic.type2022,count_clinic.type2021,count_clinic.type2020,count_clinic.type2019,ncol=1)
# 
# 
# gg <- ggplot(breast2023_sub, aes(x=breast2023_sub$Age.at.Attendance))
# gg <- gg + labs(x = "Age at Attendance")
# gg <- gg + geom_histogram(binwidth=2, colour="black", aes(y=..density..,fill=..count..))
# gg <- gg + scale_fill_gradient("Count", low="#DCDCDC", high="#7C7C7C")
# gg <- gg + stat_function(fun=dnorm, color="red",args=list(mean=mean(breast2023_sub$Age.at.Attendance,na.rm = T), sd=sd(breast2023_sub$Age.at.Attendance,na.rm = T)))
# gg
# qqnorm(breast2023_sub$Age.at.Attendance)
# qqline(breast2023_sub$Age.at.Attendance, col=2)
# boxplot(breast2023_sub$Age.at.Attendance)
# skewness((breast2023_sub$Age.at.Attendance),na.rm = T)
# kurtosis((breast2023_sub$Age.at.Attendance),na.rm = T)
# 
# cutoffabove_breast <- 50 + 1.5*IQR(breast2023_sub$Age.at.Attendance,na.rm = T)
# cutoffbelow_breast <- 50 - 1.5*IQR(breast2023_sub$Age.at.Attendance,na.rm = T)
# breast2023_sub <- subset(breast2023_sub, Age.at.Attendance <= cutoffabove_breast & Age.at.Attendance >= cutoffbelow_breast)
# summary(breast2023_sub$Age.at.Attendance)
# q1 <- qplot(x = Age.at.Attendance, data = breast2023_sub, colour=I("red"), fill=I("white")) +
#   theme_bw() +
#   theme(
#     plot.background = element_blank()
#     ,panel.grid.major = element_blank()
#     ,panel.grid.minor = element_blank()
#     ,panel.border = element_blank()
#   ) +
#   theme(axis.line = element_line(color = 'red'))
# q2 <- qplot(x = Age.at.Attendance, data = breast2023_sub, colour=I("blue"), fill=I("white")) + 
#   scale_x_continuous(limits = c(0,100)) +
#   theme_bw() +
#   theme(
#     plot.background = element_blank()
#     ,panel.grid.major = element_blank()
#     ,panel.grid.minor = element_blank()
#     ,panel.border = element_blank()
#   ) +
#   theme(axis.line = element_line(color = 'blue'))
# grid.arrange(q1, q2, ncol=1)
# 
# # Test normality of numeric variables
# set.seed(0)
# breast_attendance_sub <- breast_attendance[1:5000,] #in shapiro.test, sample size must be between 3 and 5000
# 
# shapiro.test(breast_attendance_sub$X)
# 
# shapiro.test(breast_attendance_sub$Age.at.Attendance)
# skewness((breast_attendance_sub$Age.at.Attendance),na.rm=T)
# kurtosis((breast_attendance_sub$Age.at.Attendance),na.rm=T)
# 
# shapiro.test(breast_attendance_sub$daysDiff)
# skewness((breast_attendance_sub$daysDiff),na.rm=T)
# kurtosis((breast_attendance_sub$daysDiff),na.rm=T)
# 
# pareto.chart(breast_attendance$Referral.Source)
# ```


```{r correlation}
## Correlation of outcome and predictor (nominal and nominal)
CrossTable(breast_attendance$Clinic.Type, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast2019$Clinic.Type, breast2019$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast2020$Clinic.Type, breast2020$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast2021$Clinic.Type, breast2021$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast2022$Clinic.Type, breast2022$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast2023$Clinic.Type, breast2023$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)

CrossTable(breast_attendance$Clinic.Code, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast_attendance$Referral.Source, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast_attendance$Referring.Hospital, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast_attendance$Consultant, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast_attendance$Eligibility, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast_attendance$Booking.Type, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)

CrossTable(breast_attendance$Attendance.Type.Description, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast_attendance$Attendance.Day, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast_attendance$Attendance.MonthYear, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast_attendance$attendanceMonth, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)

CrossTable(breast_attendance$Year, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)

CrossTable(breast_attendance$Gender, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)
CrossTable(breast_attendance$Area.of.Residence, breast_attendance$New.Attendances, digits=2, fisher=TRUE, chisq=TRUE, expected=TRUE)


## Correlation of outcome and predictor (nominal and scale) # if scale is parametric (normal distribution)
leveneTest(Age.at.Attendance ~ New.Attendances, data=breast_attendance)
t.test(Age.at.Attendance ~ New.Attendances, var.equal=FALSE, data=breast_attendance)

leveneTest(daysDiff ~ New.Attendances, data=breast_attendance)
t.test(daysDiff ~ New.Attendances, var.equal=TRUE, data=breast_attendance)

## Correlation of outcome and predictor (nominal and ordinal) # if scale is nonparametric (not normal distribution)
breast_attendance$New.Attendances <- as.factor(breast_attendance$New.Attendances)
wilcox.test(breast_attendance$Age.at.Attendance ~ breast_attendance$New.Attendances)
wilcox.test(breast_attendance$daysDiff ~ breast_attendance$New.Attendances)

#describeBy(as.numeric(breast_attendance$New.Attendances), factor(breast_attendance$Year))
bartlett.test(breast_attendance$New.Attendances,breast_attendance$Year)
kruskal.test(breast_attendance$New.Attendances ~ breast_attendance$Year, data=breast_attendance)
dunn_resultYear <- dunn.test(breast_attendance$X, g=breast_attendance$Year,method="bonferroni") #run library(dunn.test) for this test
bartlett.test(breast_attendance$New.Attendances==1,breast_attendance$Year)
kruskal.test(breast_attendance$New.Attendances==1 ~ breast_attendance$Year, data=breast_attendance)
bartlett.test(breast_attendance$New.Attendances==0,breast_attendance$Year)
kruskal.test(breast_attendance$New.Attendances==0 ~ breast_attendance$Year, data=breast_attendance)

bartlett.test(breast_attendance$X,breast_attendance$Clinic.Type)
kruskal.test(breast_attendance$X ~ breast_attendance$Clinic.Type, data=breast_attendance)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
